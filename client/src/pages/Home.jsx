import React,{ useState, useEffect } from 'react'

import { Loader, Card, FormField} from '../components'

const  RenderCards = ({data, title})=>{
  if(data?.length > 0){
    return data.map((post) => <Card key={post.id} {...post} />)
  }

  return(
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  )
}

const Home = () => {
  const [loading, setLoading ] = useState(false)
  const [allPosts, setAllPosts] = useState(null)
  const [searchText, setSearchText] = useState('')
  const [searchedResult, setsearchedResult] = useState(null)
  const [searchedTimout, setsearchedTimeout] = useState(null)
  

  useEffect(()=>{
    const fetchPost = async () => {
    setLoading(true);

    try {
      const response = await fetch('http://localhost:8080/api/v1/post', {
        method: 'GET',
        headers: {
          'Content-Type' : 'application/json'
        },
      })

      if(response.ok)
       {
        const result = await response.json();
        setAllPosts(result.data.reverse());
       }
    } catch (error) {
      alert(error);
    } finally{
      setLoading(false);
    }
  }
  fetchPost();
  },[])

  const handleSearchChange = (e) =>{
    clearTimeout(searchedTimout)
    
    setSearchText(e.target.value)

    setsearchedTimeout(
      setTimeout(()=>{
        const searchedResults = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().include(searchText.toLowerCase()));

        setsearchedResult(searchedResults)
      },500)
    )
  }

  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>The Community Showcase</h1>
        <p className='mt-2 text-[#666e75] text-[14px] max-w-[500px]'>Browse through a collection of imagination and visually stunning images generated by DALL-E AI</p>
      </div>

      <div className="mt-16">
        <FormField
        LableName='Search Post'
        type = 'text'
        name = 'text'
        placeholder='Search Post'
        value={searchText}
        handleChange={handleSearchChange}/>
      </div>

      <div className="mt-10">
        {
          loading ? (
            <div className="flex justify-center items-center">
              <Loader/>
            </div>
          ) : (
            <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing results for <span className='text-[#222328]'>{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 grid-gap-3">
              {
                searchText ? (
                  <RenderCards 
                  data={searchedResult}
                  title='No search result found'
                  />
                ) : (
                  <RenderCards
                  data = {allPosts}
                  title = 'No Post Found'
                  />
                )
              }

            </div>
            </>
          )
        }
      </div>
    </section>
  )
}

export default Home
